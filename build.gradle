version '1.0-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://dl.bintray.com/kotlin/kotlin-eap"
        }
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.71"
        classpath "org.jetbrains.kotlin:kotlin-frontend-plugin:0.0.37"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.17"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0"
    }
}

apply plugin: 'kotlin2js'
apply plugin: 'org.jetbrains.kotlin.frontend'
apply plugin: 'org.jetbrains.dokka'

dokka {
    includes = [
            'src/main/kotlin/view/core/renderers/dok.md',
            'src/main/kotlin/view/core/renderers/viewRenderers/dok.md',
            'src/main/kotlin/view/di/dok.md',
            'src/main/kotlin/view/utils/elementCss/dok.md'
    ]
    outputFormat = 'markdown'
    impliedPlatforms = ["JS"] // This will force platform tags for all non-common sources e.g. "JVM"
    kotlinTasks {
        // dokka fails to retrieve sources from MPP-tasks so they must be set empty to avoid exception
        // use sourceRoot instead (see below)
        []
    }
    sourceRoot {
        // assuming there is only a single source dir...
        path = sourceSets.getByName("main").kotlin.srcDirs[0]
        platforms = ["JS"]
    }
}

compileKotlin2Js {
    kotlinOptions {
        metaInfo = true
        kotlinOptions.outputFile = "${projectDir}/web/js/app.js"
        sourceMap = true
        moduleKind = "umd"
    }

    doLast {
        copy {
            from "build/node_modules_imported"
            into "web/js/lib"
        }
    }
}

kotlinFrontend {
    downloadNodeJsVersion = 'latest'

    npm {
        dependency "material-design-lite"
    }
}

sourceSets {
    main.kotlin.srcDirs += "src/main/kotlin"
}

repositories {
    flatDir {
        dirs 'libs'
    }
    jcenter()
    mavenCentral()
    maven {
        url  "https://dl.bintray.com/mzaart/View"
    }
}

group = 'MaterialDesignJsViewRenderer'

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

apply from: project.file('pom.gradle')
apply from: project.file('bintray.gradle')

publishing {
    publications {
        mavenProject(MavenPublication) {
            from components.java

            groupId project.group
            artifactId project.name
            version '0.1.0'

            artifact sourcesJar

            withPom(pom)
        }
    }
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:1.2.60"
    testCompile "org.jetbrains.kotlin:kotlin-test-js"

    //compile(name: 'View-js', ext:'jar')
    compile(group: 'value: View', name: 'value: View-js', version: 'value: 0.1.0', ext: 'jar', classifier: '')

    compile 'org.kodein.di:kodein-di-erased-js:5.2.0'
    compile 'org.kodein.di:kodein-di-conf-js:5.2.0'
}

clean.doFirst {
    delete 'web/js/app', 'web/js/app.js', 'web/js/app.meta.js', 'web/js/lib'
}